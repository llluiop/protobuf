// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: my2.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "my2.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace {

const ::google::protobuf::Descriptor* LogonReqMessage2_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  LogonReqMessage2_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_my2_2eproto() {
  protobuf_AddDesc_my2_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "my2.proto");
  GOOGLE_CHECK(file != NULL);
  LogonReqMessage2_descriptor_ = file->message_type(0);
  static const int LogonReqMessage2_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogonReqMessage2, passwd2_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogonReqMessage2, acctid2_),
  };
  LogonReqMessage2_reflection_ =
    ::google::protobuf::internal::GeneratedMessageReflection::NewGeneratedMessageReflection(
      LogonReqMessage2_descriptor_,
      LogonReqMessage2::default_instance_,
      LogonReqMessage2_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogonReqMessage2, _has_bits_[0]),
      -1,
      -1,
      sizeof(LogonReqMessage2),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(LogonReqMessage2, _internal_metadata_),
      -1);
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_my2_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
      LogonReqMessage2_descriptor_, &LogonReqMessage2::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_my2_2eproto() {
  delete LogonReqMessage2::default_instance_;
  delete LogonReqMessage2_reflection_;
}

void protobuf_AddDesc_my2_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\tmy2.proto\"4\n\020LogonReqMessage2\022\017\n\007passw"
    "d2\030\002 \002(\t\022\017\n\007acctID2\030\001 \002(\003", 65);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "my2.proto", &protobuf_RegisterTypes);
  LogonReqMessage2::default_instance_ = new LogonReqMessage2();
  LogonReqMessage2::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_my2_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_my2_2eproto {
  StaticDescriptorInitializer_my2_2eproto() {
    protobuf_AddDesc_my2_2eproto();
  }
} static_descriptor_initializer_my2_2eproto_;

namespace {

static void MergeFromFail(int line) GOOGLE_ATTRIBUTE_COLD;
static void MergeFromFail(int line) {
  GOOGLE_CHECK(false) << __FILE__ << ":" << line;
}

}  // namespace


// ===================================================================

#ifndef _MSC_VER
const int LogonReqMessage2::kPasswd2FieldNumber;
const int LogonReqMessage2::kAcctID2FieldNumber;
#endif  // !_MSC_VER

LogonReqMessage2::LogonReqMessage2()
  : ::google::protobuf::Message() , _internal_metadata_(NULL)  {
  SharedCtor();
  // @@protoc_insertion_point(constructor:LogonReqMessage2)
}

void LogonReqMessage2::InitAsDefaultInstance() {
}

LogonReqMessage2::LogonReqMessage2(const LogonReqMessage2& from)
  : ::google::protobuf::Message(),
    _internal_metadata_(NULL) {
  SharedCtor();
  MergeFrom(from);
  // @@protoc_insertion_point(copy_constructor:LogonReqMessage2)
}

void LogonReqMessage2::SharedCtor() {
  ::google::protobuf::internal::GetEmptyString();
  _cached_size_ = 0;
  passwd2_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  acctid2_ = GOOGLE_LONGLONG(0);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

LogonReqMessage2::~LogonReqMessage2() {
  // @@protoc_insertion_point(destructor:LogonReqMessage2)
  SharedDtor();
}

void LogonReqMessage2::SharedDtor() {
  passwd2_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  if (this != default_instance_) {
  }
}

void LogonReqMessage2::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* LogonReqMessage2::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return LogonReqMessage2_descriptor_;
}

const LogonReqMessage2& LogonReqMessage2::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_my2_2eproto();
  return *default_instance_;
}

LogonReqMessage2* LogonReqMessage2::default_instance_ = NULL;

LogonReqMessage2* LogonReqMessage2::New(::google::protobuf::Arena* arena) const {
  LogonReqMessage2* n = new LogonReqMessage2;
  if (arena != NULL) {
    arena->Own(n);
  }
  return n;
}

void LogonReqMessage2::Clear() {
  if (_has_bits_[0 / 32] & 3) {
    if (has_passwd2()) {
      passwd2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    }
    acctid2_ = GOOGLE_LONGLONG(0);
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  if (_internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->Clear();
  }
}

bool LogonReqMessage2::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) goto failure
  ::google::protobuf::uint32 tag;
  // @@protoc_insertion_point(parse_start:LogonReqMessage2)
  for (;;) {
    ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoff(127);
    tag = p.first;
    if (!p.second) goto handle_unusual;
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int64 acctID2 = 1;
      case 1: {
        if (tag == 8) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int64, ::google::protobuf::internal::WireFormatLite::TYPE_INT64>(
                 input, &acctid2_)));
          set_has_acctid2();
        } else {
          goto handle_unusual;
        }
        if (input->ExpectTag(18)) goto parse_passwd2;
        break;
      }

      // required string passwd2 = 2;
      case 2: {
        if (tag == 18) {
         parse_passwd2:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_passwd2()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
            this->passwd2().data(), this->passwd2().length(),
            ::google::protobuf::internal::WireFormat::PARSE,
            "LogonReqMessage2.passwd2");
        } else {
          goto handle_unusual;
        }
        if (input->ExpectAtEnd()) goto success;
        break;
      }

      default: {
      handle_unusual:
        if (tag == 0 ||
            ::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          goto success;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
success:
  // @@protoc_insertion_point(parse_success:LogonReqMessage2)
  return true;
failure:
  // @@protoc_insertion_point(parse_failure:LogonReqMessage2)
  return false;
#undef DO_
}

void LogonReqMessage2::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // @@protoc_insertion_point(serialize_start:LogonReqMessage2)
  // required int64 acctID2 = 1;
  if (has_acctid2()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt64(1, this->acctid2(), output);
  }

  // required string passwd2 = 2;
  if (has_passwd2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->passwd2().data(), this->passwd2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LogonReqMessage2.passwd2");
    ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(
      2, this->passwd2(), output);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
  // @@protoc_insertion_point(serialize_end:LogonReqMessage2)
}

::google::protobuf::uint8* LogonReqMessage2::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // @@protoc_insertion_point(serialize_to_array_start:LogonReqMessage2)
  // required int64 acctID2 = 1;
  if (has_acctid2()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt64ToArray(1, this->acctid2(), target);
  }

  // required string passwd2 = 2;
  if (has_passwd2()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8StringNamedField(
      this->passwd2().data(), this->passwd2().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE,
      "LogonReqMessage2.passwd2");
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->passwd2(), target);
  }

  if (_internal_metadata_.have_unknown_fields()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  // @@protoc_insertion_point(serialize_to_array_end:LogonReqMessage2)
  return target;
}

int LogonReqMessage2::RequiredFieldsByteSizeFallback() const {
  int total_size = 0;

  if (has_passwd2()) {
    // required string passwd2 = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->passwd2());
  }

  if (has_acctid2()) {
    // required int64 acctID2 = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->acctid2());
  }

  return total_size;
}
int LogonReqMessage2::ByteSize() const {
  int total_size = 0;

  if (((_has_bits_[0] & 0x00000003) ^ 0x00000003) == 0) {  // All required fields are present.
    // required string passwd2 = 2;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::StringSize(
        this->passwd2());

    // required int64 acctID2 = 1;
    total_size += 1 +
      ::google::protobuf::internal::WireFormatLite::Int64Size(
        this->acctid2());

  } else {
    total_size += RequiredFieldsByteSizeFallback();
  }
  if (_internal_metadata_.have_unknown_fields()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void LogonReqMessage2::MergeFrom(const ::google::protobuf::Message& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  const LogonReqMessage2* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const LogonReqMessage2*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void LogonReqMessage2::MergeFrom(const LogonReqMessage2& from) {
  if (GOOGLE_PREDICT_FALSE(&from == this)) MergeFromFail(__LINE__);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_passwd2()) {
      set_has_passwd2();
      passwd2_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.passwd2_);
    }
    if (from.has_acctid2()) {
      set_acctid2(from.acctid2());
    }
  }
  if (from._internal_metadata_.have_unknown_fields()) {
    mutable_unknown_fields()->MergeFrom(from.unknown_fields());
  }
}

void LogonReqMessage2::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void LogonReqMessage2::CopyFrom(const LogonReqMessage2& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool LogonReqMessage2::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void LogonReqMessage2::Swap(LogonReqMessage2* other) {
  if (other == this) return;
  InternalSwap(other);
}
void LogonReqMessage2::InternalSwap(LogonReqMessage2* other) {
  passwd2_.Swap(&other->passwd2_);
  std::swap(acctid2_, other->acctid2_);
  std::swap(_has_bits_[0], other->_has_bits_[0]);
  _internal_metadata_.Swap(&other->_internal_metadata_);
  std::swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata LogonReqMessage2::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = LogonReqMessage2_descriptor_;
  metadata.reflection = LogonReqMessage2_reflection_;
  return metadata;
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// LogonReqMessage2

// required string passwd2 = 2;
 bool LogonReqMessage2::has_passwd2() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
 void LogonReqMessage2::set_has_passwd2() {
  _has_bits_[0] |= 0x00000001u;
}
 void LogonReqMessage2::clear_has_passwd2() {
  _has_bits_[0] &= ~0x00000001u;
}
 void LogonReqMessage2::clear_passwd2() {
  passwd2_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_passwd2();
}
 const ::std::string& LogonReqMessage2::passwd2() const {
  // @@protoc_insertion_point(field_get:LogonReqMessage2.passwd2)
  return passwd2_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LogonReqMessage2::set_passwd2(const ::std::string& value) {
  set_has_passwd2();
  passwd2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LogonReqMessage2.passwd2)
}
 void LogonReqMessage2::set_passwd2(const char* value) {
  set_has_passwd2();
  passwd2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LogonReqMessage2.passwd2)
}
 void LogonReqMessage2::set_passwd2(const char* value, size_t size) {
  set_has_passwd2();
  passwd2_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LogonReqMessage2.passwd2)
}
 ::std::string* LogonReqMessage2::mutable_passwd2() {
  set_has_passwd2();
  // @@protoc_insertion_point(field_mutable:LogonReqMessage2.passwd2)
  return passwd2_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 ::std::string* LogonReqMessage2::release_passwd2() {
  clear_has_passwd2();
  return passwd2_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
 void LogonReqMessage2::set_allocated_passwd2(::std::string* passwd2) {
  if (passwd2 != NULL) {
    set_has_passwd2();
  } else {
    clear_has_passwd2();
  }
  passwd2_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), passwd2);
  // @@protoc_insertion_point(field_set_allocated:LogonReqMessage2.passwd2)
}

// required int64 acctID2 = 1;
 bool LogonReqMessage2::has_acctid2() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
 void LogonReqMessage2::set_has_acctid2() {
  _has_bits_[0] |= 0x00000002u;
}
 void LogonReqMessage2::clear_has_acctid2() {
  _has_bits_[0] &= ~0x00000002u;
}
 void LogonReqMessage2::clear_acctid2() {
  acctid2_ = GOOGLE_LONGLONG(0);
  clear_has_acctid2();
}
 ::google::protobuf::int64 LogonReqMessage2::acctid2() const {
  // @@protoc_insertion_point(field_get:LogonReqMessage2.acctID2)
  return acctid2_;
}
 void LogonReqMessage2::set_acctid2(::google::protobuf::int64 value) {
  set_has_acctid2();
  acctid2_ = value;
  // @@protoc_insertion_point(field_set:LogonReqMessage2.acctID2)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)
