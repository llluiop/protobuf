// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: my.proto

#ifndef PROTOBUF_my_2eproto__INCLUDED
#define PROTOBUF_my_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3000000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3000000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

// Internal implementation detail -- do not call these.
void protobuf_AddDesc_my_2eproto();
void protobuf_AssignDesc_my_2eproto();
void protobuf_ShutdownFile_my_2eproto();

class LogonReqMessage;

// ===================================================================

class LogonReqMessage : public ::google::protobuf::Message {
 public:
  LogonReqMessage();
  virtual ~LogonReqMessage();

  LogonReqMessage(const LogonReqMessage& from);

  inline LogonReqMessage& operator=(const LogonReqMessage& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _internal_metadata_.unknown_fields();
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return _internal_metadata_.mutable_unknown_fields();
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const LogonReqMessage& default_instance();

  void Swap(LogonReqMessage* other);

  // implements Message ----------------------------------------------

  inline LogonReqMessage* New() const { return New(NULL); }

  LogonReqMessage* New(::google::protobuf::Arena* arena) const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const LogonReqMessage& from);
  void MergeFrom(const LogonReqMessage& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  void InternalSwap(LogonReqMessage* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return _internal_metadata_.arena();
  }
  inline void* MaybeArenaPtr() const {
    return _internal_metadata_.raw_arena_ptr();
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int64 acctID = 1;
  bool has_acctid() const;
  void clear_acctid();
  static const int kAcctIDFieldNumber = 1;
  ::google::protobuf::int64 acctid() const;
  void set_acctid(::google::protobuf::int64 value);

  // required string passwd = 2;
  bool has_passwd() const;
  void clear_passwd();
  static const int kPasswdFieldNumber = 2;
  const ::std::string& passwd() const;
  void set_passwd(const ::std::string& value);
  void set_passwd(const char* value);
  void set_passwd(const char* value, size_t size);
  ::std::string* mutable_passwd();
  ::std::string* release_passwd();
  void set_allocated_passwd(::std::string* passwd);

  // @@protoc_insertion_point(class_scope:LogonReqMessage)
 private:
  inline void set_has_acctid();
  inline void clear_has_acctid();
  inline void set_has_passwd();
  inline void clear_has_passwd();

  // helper for ByteSize()
  int RequiredFieldsByteSizeFallback() const;

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int64 acctid_;
  ::google::protobuf::internal::ArenaStringPtr passwd_;
  friend void  protobuf_AddDesc_my_2eproto();
  friend void protobuf_AssignDesc_my_2eproto();
  friend void protobuf_ShutdownFile_my_2eproto();

  void InitAsDefaultInstance();
  static LogonReqMessage* default_instance_;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
// LogonReqMessage

// required int64 acctID = 1;
inline bool LogonReqMessage::has_acctid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void LogonReqMessage::set_has_acctid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void LogonReqMessage::clear_has_acctid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void LogonReqMessage::clear_acctid() {
  acctid_ = GOOGLE_LONGLONG(0);
  clear_has_acctid();
}
inline ::google::protobuf::int64 LogonReqMessage::acctid() const {
  // @@protoc_insertion_point(field_get:LogonReqMessage.acctID)
  return acctid_;
}
inline void LogonReqMessage::set_acctid(::google::protobuf::int64 value) {
  set_has_acctid();
  acctid_ = value;
  // @@protoc_insertion_point(field_set:LogonReqMessage.acctID)
}

// required string passwd = 2;
inline bool LogonReqMessage::has_passwd() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void LogonReqMessage::set_has_passwd() {
  _has_bits_[0] |= 0x00000002u;
}
inline void LogonReqMessage::clear_has_passwd() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void LogonReqMessage::clear_passwd() {
  passwd_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  clear_has_passwd();
}
inline const ::std::string& LogonReqMessage::passwd() const {
  // @@protoc_insertion_point(field_get:LogonReqMessage.passwd)
  return passwd_.GetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LogonReqMessage::set_passwd(const ::std::string& value) {
  set_has_passwd();
  passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:LogonReqMessage.passwd)
}
inline void LogonReqMessage::set_passwd(const char* value) {
  set_has_passwd();
  passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:LogonReqMessage.passwd)
}
inline void LogonReqMessage::set_passwd(const char* value, size_t size) {
  set_has_passwd();
  passwd_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:LogonReqMessage.passwd)
}
inline ::std::string* LogonReqMessage::mutable_passwd() {
  set_has_passwd();
  // @@protoc_insertion_point(field_mutable:LogonReqMessage.passwd)
  return passwd_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* LogonReqMessage::release_passwd() {
  clear_has_passwd();
  return passwd_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void LogonReqMessage::set_allocated_passwd(::std::string* passwd) {
  if (passwd != NULL) {
    set_has_passwd();
  } else {
    clear_has_passwd();
  }
  passwd_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), passwd);
  // @@protoc_insertion_point(field_set_allocated:LogonReqMessage.passwd)
}

#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_my_2eproto__INCLUDED
